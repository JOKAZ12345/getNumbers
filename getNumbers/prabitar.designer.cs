#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace getNumbers
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="prabitar")]
	public partial class prabitarDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertArrendamento(Arrendamento instance);
    partial void UpdateArrendamento(Arrendamento instance);
    partial void DeleteArrendamento(Arrendamento instance);
    partial void InsertArrendar(Arrendar instance);
    partial void UpdateArrendar(Arrendar instance);
    partial void DeleteArrendar(Arrendar instance);
    partial void InsertArrendatario(Arrendatario instance);
    partial void UpdateArrendatario(Arrendatario instance);
    partial void DeleteArrendatario(Arrendatario instance);
    partial void InsertComprador(Comprador instance);
    partial void UpdateComprador(Comprador instance);
    partial void DeleteComprador(Comprador instance);
    partial void InsertComprar(Comprar instance);
    partial void UpdateComprar(Comprar instance);
    partial void DeleteComprar(Comprar instance);
    partial void InsertDesejo(Desejo instance);
    partial void UpdateDesejo(Desejo instance);
    partial void DeleteDesejo(Desejo instance);
    partial void InsertImovel(Imovel instance);
    partial void UpdateImovel(Imovel instance);
    partial void DeleteImovel(Imovel instance);
    partial void InsertPermuta(Permuta instance);
    partial void UpdatePermuta(Permuta instance);
    partial void DeletePermuta(Permuta instance);
    partial void InsertPreco(Preco instance);
    partial void UpdatePreco(Preco instance);
    partial void DeletePreco(Preco instance);
    partial void InsertVenda(Venda instance);
    partial void UpdateVenda(Venda instance);
    partial void DeleteVenda(Venda instance);
    partial void InsertVendedor(Vendedor instance);
    partial void UpdateVendedor(Vendedor instance);
    partial void DeleteVendedor(Vendedor instance);
    partial void InsertVender(Vender instance);
    partial void UpdateVender(Vender instance);
    partial void DeleteVender(Vender instance);
    partial void InsertAgencia(Agencia instance);
    partial void UpdateAgencia(Agencia instance);
    partial void DeleteAgencia(Agencia instance);
    partial void InsertPessoa(Pessoa instance);
    partial void UpdatePessoa(Pessoa instance);
    partial void DeletePessoa(Pessoa instance);
    partial void InsertIgnorar(Ignorar instance);
    partial void UpdateIgnorar(Ignorar instance);
    partial void DeleteIgnorar(Ignorar instance);
    partial void InsertPotencial(Potencial instance);
    partial void UpdatePotencial(Potencial instance);
    partial void DeletePotencial(Potencial instance);
    #endregion
		
		public prabitarDataContext() : 
				base(global::getNumbers.Properties.Settings.Default.prabitarConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public prabitarDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public prabitarDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public prabitarDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public prabitarDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Arrendamento> Arrendamentos
		{
			get
			{
				return this.GetTable<Arrendamento>();
			}
		}
		
		public System.Data.Linq.Table<Arrendar> Arrendars
		{
			get
			{
				return this.GetTable<Arrendar>();
			}
		}
		
		public System.Data.Linq.Table<Arrendatario> Arrendatarios
		{
			get
			{
				return this.GetTable<Arrendatario>();
			}
		}
		
		public System.Data.Linq.Table<Comprador> Compradors
		{
			get
			{
				return this.GetTable<Comprador>();
			}
		}
		
		public System.Data.Linq.Table<Comprar> Comprars
		{
			get
			{
				return this.GetTable<Comprar>();
			}
		}
		
		public System.Data.Linq.Table<Desejo> Desejos
		{
			get
			{
				return this.GetTable<Desejo>();
			}
		}
		
		public System.Data.Linq.Table<Imovel> Imovels
		{
			get
			{
				return this.GetTable<Imovel>();
			}
		}
		
		public System.Data.Linq.Table<Permuta> Permutas
		{
			get
			{
				return this.GetTable<Permuta>();
			}
		}
		
		public System.Data.Linq.Table<Preco> Precos
		{
			get
			{
				return this.GetTable<Preco>();
			}
		}
		
		public System.Data.Linq.Table<Venda> Vendas
		{
			get
			{
				return this.GetTable<Venda>();
			}
		}
		
		public System.Data.Linq.Table<Vendedor> Vendedors
		{
			get
			{
				return this.GetTable<Vendedor>();
			}
		}
		
		public System.Data.Linq.Table<Vender> Venders
		{
			get
			{
				return this.GetTable<Vender>();
			}
		}
		
		public System.Data.Linq.Table<Agencia> Agencias
		{
			get
			{
				return this.GetTable<Agencia>();
			}
		}
		
		public System.Data.Linq.Table<Pessoa> Pessoas
		{
			get
			{
				return this.GetTable<Pessoa>();
			}
		}
		
		public System.Data.Linq.Table<Ignorar> Ignorars
		{
			get
			{
				return this.GetTable<Ignorar>();
			}
		}
		
		public System.Data.Linq.Table<Potencial> Potencials
		{
			get
			{
				return this.GetTable<Potencial>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Arrendamentos")]
	public partial class Arrendamento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Arrendamento_ID;
		
		private System.Nullable<System.DateTime> _Data;
		
		private string _Observacoes;
		
		private System.Nullable<decimal> _Preco;
		
		private EntitySet<Arrendatario> _Arrendatarios;
		
		private EntitySet<Comprador> _Compradors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArrendamento_IDChanging(int value);
    partial void OnArrendamento_IDChanged();
    partial void OnDataChanging(System.Nullable<System.DateTime> value);
    partial void OnDataChanged();
    partial void OnObservacoesChanging(string value);
    partial void OnObservacoesChanged();
    partial void OnPrecoChanging(System.Nullable<decimal> value);
    partial void OnPrecoChanged();
    #endregion
		
		public Arrendamento()
		{
			this._Arrendatarios = new EntitySet<Arrendatario>(new Action<Arrendatario>(this.attach_Arrendatarios), new Action<Arrendatario>(this.detach_Arrendatarios));
			this._Compradors = new EntitySet<Comprador>(new Action<Comprador>(this.attach_Compradors), new Action<Comprador>(this.detach_Compradors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arrendamento_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Arrendamento_ID
		{
			get
			{
				return this._Arrendamento_ID;
			}
			set
			{
				if ((this._Arrendamento_ID != value))
				{
					this.OnArrendamento_IDChanging(value);
					this.SendPropertyChanging();
					this._Arrendamento_ID = value;
					this.SendPropertyChanged("Arrendamento_ID");
					this.OnArrendamento_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="Date")]
		public System.Nullable<System.DateTime> Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Observacoes", DbType="VarChar(500)")]
		public string Observacoes
		{
			get
			{
				return this._Observacoes;
			}
			set
			{
				if ((this._Observacoes != value))
				{
					this.OnObservacoesChanging(value);
					this.SendPropertyChanging();
					this._Observacoes = value;
					this.SendPropertyChanged("Observacoes");
					this.OnObservacoesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Preco", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Preco
		{
			get
			{
				return this._Preco;
			}
			set
			{
				if ((this._Preco != value))
				{
					this.OnPrecoChanging(value);
					this.SendPropertyChanging();
					this._Preco = value;
					this.SendPropertyChanged("Preco");
					this.OnPrecoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Arrendamento_Arrendatario", Storage="_Arrendatarios", ThisKey="Arrendamento_ID", OtherKey="Arrendamento_ID")]
		public EntitySet<Arrendatario> Arrendatarios
		{
			get
			{
				return this._Arrendatarios;
			}
			set
			{
				this._Arrendatarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Arrendamento_Comprador", Storage="_Compradors", ThisKey="Arrendamento_ID", OtherKey="Arrendamento_ID")]
		public EntitySet<Comprador> Compradors
		{
			get
			{
				return this._Compradors;
			}
			set
			{
				this._Compradors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Arrendatarios(Arrendatario entity)
		{
			this.SendPropertyChanging();
			entity.Arrendamento = this;
		}
		
		private void detach_Arrendatarios(Arrendatario entity)
		{
			this.SendPropertyChanging();
			entity.Arrendamento = null;
		}
		
		private void attach_Compradors(Comprador entity)
		{
			this.SendPropertyChanging();
			entity.Arrendamento = this;
		}
		
		private void detach_Compradors(Comprador entity)
		{
			this.SendPropertyChanging();
			entity.Arrendamento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Arrendar")]
	public partial class Arrendar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Arrendar_ID;
		
		private int _Imovel_ID;
		
		private EntityRef<Imovel> _Imovel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArrendar_IDChanging(int value);
    partial void OnArrendar_IDChanged();
    partial void OnImovel_IDChanging(int value);
    partial void OnImovel_IDChanged();
    #endregion
		
		public Arrendar()
		{
			this._Imovel = default(EntityRef<Imovel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arrendar_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Arrendar_ID
		{
			get
			{
				return this._Arrendar_ID;
			}
			set
			{
				if ((this._Arrendar_ID != value))
				{
					this.OnArrendar_IDChanging(value);
					this.SendPropertyChanging();
					this._Arrendar_ID = value;
					this.SendPropertyChanged("Arrendar_ID");
					this.OnArrendar_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imovel_ID", DbType="Int NOT NULL")]
		public int Imovel_ID
		{
			get
			{
				return this._Imovel_ID;
			}
			set
			{
				if ((this._Imovel_ID != value))
				{
					if (this._Imovel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImovel_IDChanging(value);
					this.SendPropertyChanging();
					this._Imovel_ID = value;
					this.SendPropertyChanged("Imovel_ID");
					this.OnImovel_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Imovel_Arrendar", Storage="_Imovel", ThisKey="Imovel_ID", OtherKey="Imovel_ID", IsForeignKey=true)]
		public Imovel Imovel
		{
			get
			{
				return this._Imovel.Entity;
			}
			set
			{
				Imovel previousValue = this._Imovel.Entity;
				if (((previousValue != value) 
							|| (this._Imovel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Imovel.Entity = null;
						previousValue.Arrendars.Remove(this);
					}
					this._Imovel.Entity = value;
					if ((value != null))
					{
						value.Arrendars.Add(this);
						this._Imovel_ID = value.Imovel_ID;
					}
					else
					{
						this._Imovel_ID = default(int);
					}
					this.SendPropertyChanged("Imovel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Arrendatario")]
	public partial class Arrendatario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Arrendatario_ID;
		
		private int _Pessoa_ID;
		
		private System.Nullable<int> _Imovel_ID;
		
		private int _Arrendamento_ID;
		
		private EntitySet<Imovel> _Imovels;
		
		private EntityRef<Arrendamento> _Arrendamento;
		
		private EntityRef<Imovel> _Imovel;
		
		private EntityRef<Pessoa> _Pessoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArrendatario_IDChanging(int value);
    partial void OnArrendatario_IDChanged();
    partial void OnPessoa_IDChanging(int value);
    partial void OnPessoa_IDChanged();
    partial void OnImovel_IDChanging(System.Nullable<int> value);
    partial void OnImovel_IDChanged();
    partial void OnArrendamento_IDChanging(int value);
    partial void OnArrendamento_IDChanged();
    #endregion
		
		public Arrendatario()
		{
			this._Imovels = new EntitySet<Imovel>(new Action<Imovel>(this.attach_Imovels), new Action<Imovel>(this.detach_Imovels));
			this._Arrendamento = default(EntityRef<Arrendamento>);
			this._Imovel = default(EntityRef<Imovel>);
			this._Pessoa = default(EntityRef<Pessoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arrendatario_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Arrendatario_ID
		{
			get
			{
				return this._Arrendatario_ID;
			}
			set
			{
				if ((this._Arrendatario_ID != value))
				{
					this.OnArrendatario_IDChanging(value);
					this.SendPropertyChanging();
					this._Arrendatario_ID = value;
					this.SendPropertyChanged("Arrendatario_ID");
					this.OnArrendatario_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pessoa_ID", DbType="Int NOT NULL")]
		public int Pessoa_ID
		{
			get
			{
				return this._Pessoa_ID;
			}
			set
			{
				if ((this._Pessoa_ID != value))
				{
					if (this._Pessoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPessoa_IDChanging(value);
					this.SendPropertyChanging();
					this._Pessoa_ID = value;
					this.SendPropertyChanged("Pessoa_ID");
					this.OnPessoa_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imovel_ID", DbType="Int")]
		public System.Nullable<int> Imovel_ID
		{
			get
			{
				return this._Imovel_ID;
			}
			set
			{
				if ((this._Imovel_ID != value))
				{
					if (this._Imovel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImovel_IDChanging(value);
					this.SendPropertyChanging();
					this._Imovel_ID = value;
					this.SendPropertyChanged("Imovel_ID");
					this.OnImovel_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arrendamento_ID", DbType="Int NOT NULL")]
		public int Arrendamento_ID
		{
			get
			{
				return this._Arrendamento_ID;
			}
			set
			{
				if ((this._Arrendamento_ID != value))
				{
					if (this._Arrendamento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArrendamento_IDChanging(value);
					this.SendPropertyChanging();
					this._Arrendamento_ID = value;
					this.SendPropertyChanged("Arrendamento_ID");
					this.OnArrendamento_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Arrendatario_Imovel", Storage="_Imovels", ThisKey="Arrendatario_ID", OtherKey="Arrendatario_ID")]
		public EntitySet<Imovel> Imovels
		{
			get
			{
				return this._Imovels;
			}
			set
			{
				this._Imovels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Arrendamento_Arrendatario", Storage="_Arrendamento", ThisKey="Arrendamento_ID", OtherKey="Arrendamento_ID", IsForeignKey=true)]
		public Arrendamento Arrendamento
		{
			get
			{
				return this._Arrendamento.Entity;
			}
			set
			{
				Arrendamento previousValue = this._Arrendamento.Entity;
				if (((previousValue != value) 
							|| (this._Arrendamento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Arrendamento.Entity = null;
						previousValue.Arrendatarios.Remove(this);
					}
					this._Arrendamento.Entity = value;
					if ((value != null))
					{
						value.Arrendatarios.Add(this);
						this._Arrendamento_ID = value.Arrendamento_ID;
					}
					else
					{
						this._Arrendamento_ID = default(int);
					}
					this.SendPropertyChanged("Arrendamento");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Imovel_Arrendatario", Storage="_Imovel", ThisKey="Imovel_ID", OtherKey="Imovel_ID", IsForeignKey=true)]
		public Imovel Imovel
		{
			get
			{
				return this._Imovel.Entity;
			}
			set
			{
				Imovel previousValue = this._Imovel.Entity;
				if (((previousValue != value) 
							|| (this._Imovel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Imovel.Entity = null;
						previousValue.Arrendatarios.Remove(this);
					}
					this._Imovel.Entity = value;
					if ((value != null))
					{
						value.Arrendatarios.Add(this);
						this._Imovel_ID = value.Imovel_ID;
					}
					else
					{
						this._Imovel_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Imovel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pessoa_Arrendatario", Storage="_Pessoa", ThisKey="Pessoa_ID", OtherKey="Pessoa_ID", IsForeignKey=true)]
		public Pessoa Pessoa
		{
			get
			{
				return this._Pessoa.Entity;
			}
			set
			{
				Pessoa previousValue = this._Pessoa.Entity;
				if (((previousValue != value) 
							|| (this._Pessoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pessoa.Entity = null;
						previousValue.Arrendatarios.Remove(this);
					}
					this._Pessoa.Entity = value;
					if ((value != null))
					{
						value.Arrendatarios.Add(this);
						this._Pessoa_ID = value.Pessoa_ID;
					}
					else
					{
						this._Pessoa_ID = default(int);
					}
					this.SendPropertyChanged("Pessoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Imovels(Imovel entity)
		{
			this.SendPropertyChanging();
			entity.Arrendatario = this;
		}
		
		private void detach_Imovels(Imovel entity)
		{
			this.SendPropertyChanging();
			entity.Arrendatario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comprador")]
	public partial class Comprador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Comprador_ID;
		
		private int _Pessoa_ID;
		
		private System.Nullable<int> _Imovel_ID;
		
		private int _Venda_ID;
		
		private int _Arrendamento_ID;
		
		private EntitySet<Desejo> _Desejos;
		
		private EntitySet<Imovel> _Imovels;
		
		private EntityRef<Arrendamento> _Arrendamento;
		
		private EntityRef<Imovel> _Imovel;
		
		private EntityRef<Venda> _Venda;
		
		private EntityRef<Pessoa> _Pessoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnComprador_IDChanging(int value);
    partial void OnComprador_IDChanged();
    partial void OnPessoa_IDChanging(int value);
    partial void OnPessoa_IDChanged();
    partial void OnImovel_IDChanging(System.Nullable<int> value);
    partial void OnImovel_IDChanged();
    partial void OnVenda_IDChanging(int value);
    partial void OnVenda_IDChanged();
    partial void OnArrendamento_IDChanging(int value);
    partial void OnArrendamento_IDChanged();
    #endregion
		
		public Comprador()
		{
			this._Desejos = new EntitySet<Desejo>(new Action<Desejo>(this.attach_Desejos), new Action<Desejo>(this.detach_Desejos));
			this._Imovels = new EntitySet<Imovel>(new Action<Imovel>(this.attach_Imovels), new Action<Imovel>(this.detach_Imovels));
			this._Arrendamento = default(EntityRef<Arrendamento>);
			this._Imovel = default(EntityRef<Imovel>);
			this._Venda = default(EntityRef<Venda>);
			this._Pessoa = default(EntityRef<Pessoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comprador_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Comprador_ID
		{
			get
			{
				return this._Comprador_ID;
			}
			set
			{
				if ((this._Comprador_ID != value))
				{
					this.OnComprador_IDChanging(value);
					this.SendPropertyChanging();
					this._Comprador_ID = value;
					this.SendPropertyChanged("Comprador_ID");
					this.OnComprador_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pessoa_ID", DbType="Int NOT NULL")]
		public int Pessoa_ID
		{
			get
			{
				return this._Pessoa_ID;
			}
			set
			{
				if ((this._Pessoa_ID != value))
				{
					if (this._Pessoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPessoa_IDChanging(value);
					this.SendPropertyChanging();
					this._Pessoa_ID = value;
					this.SendPropertyChanged("Pessoa_ID");
					this.OnPessoa_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imovel_ID", DbType="Int")]
		public System.Nullable<int> Imovel_ID
		{
			get
			{
				return this._Imovel_ID;
			}
			set
			{
				if ((this._Imovel_ID != value))
				{
					if (this._Imovel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImovel_IDChanging(value);
					this.SendPropertyChanging();
					this._Imovel_ID = value;
					this.SendPropertyChanged("Imovel_ID");
					this.OnImovel_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Venda_ID", DbType="Int NOT NULL")]
		public int Venda_ID
		{
			get
			{
				return this._Venda_ID;
			}
			set
			{
				if ((this._Venda_ID != value))
				{
					if (this._Venda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVenda_IDChanging(value);
					this.SendPropertyChanging();
					this._Venda_ID = value;
					this.SendPropertyChanged("Venda_ID");
					this.OnVenda_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arrendamento_ID", DbType="Int NOT NULL")]
		public int Arrendamento_ID
		{
			get
			{
				return this._Arrendamento_ID;
			}
			set
			{
				if ((this._Arrendamento_ID != value))
				{
					if (this._Arrendamento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArrendamento_IDChanging(value);
					this.SendPropertyChanging();
					this._Arrendamento_ID = value;
					this.SendPropertyChanged("Arrendamento_ID");
					this.OnArrendamento_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comprador_Desejo", Storage="_Desejos", ThisKey="Comprador_ID", OtherKey="Comprador_ID")]
		public EntitySet<Desejo> Desejos
		{
			get
			{
				return this._Desejos;
			}
			set
			{
				this._Desejos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comprador_Imovel", Storage="_Imovels", ThisKey="Comprador_ID", OtherKey="Comprador_ID")]
		public EntitySet<Imovel> Imovels
		{
			get
			{
				return this._Imovels;
			}
			set
			{
				this._Imovels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Arrendamento_Comprador", Storage="_Arrendamento", ThisKey="Arrendamento_ID", OtherKey="Arrendamento_ID", IsForeignKey=true)]
		public Arrendamento Arrendamento
		{
			get
			{
				return this._Arrendamento.Entity;
			}
			set
			{
				Arrendamento previousValue = this._Arrendamento.Entity;
				if (((previousValue != value) 
							|| (this._Arrendamento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Arrendamento.Entity = null;
						previousValue.Compradors.Remove(this);
					}
					this._Arrendamento.Entity = value;
					if ((value != null))
					{
						value.Compradors.Add(this);
						this._Arrendamento_ID = value.Arrendamento_ID;
					}
					else
					{
						this._Arrendamento_ID = default(int);
					}
					this.SendPropertyChanged("Arrendamento");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Imovel_Comprador", Storage="_Imovel", ThisKey="Imovel_ID", OtherKey="Imovel_ID", IsForeignKey=true)]
		public Imovel Imovel
		{
			get
			{
				return this._Imovel.Entity;
			}
			set
			{
				Imovel previousValue = this._Imovel.Entity;
				if (((previousValue != value) 
							|| (this._Imovel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Imovel.Entity = null;
						previousValue.Compradors.Remove(this);
					}
					this._Imovel.Entity = value;
					if ((value != null))
					{
						value.Compradors.Add(this);
						this._Imovel_ID = value.Imovel_ID;
					}
					else
					{
						this._Imovel_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Imovel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venda_Comprador", Storage="_Venda", ThisKey="Venda_ID", OtherKey="Venda_ID", IsForeignKey=true)]
		public Venda Venda
		{
			get
			{
				return this._Venda.Entity;
			}
			set
			{
				Venda previousValue = this._Venda.Entity;
				if (((previousValue != value) 
							|| (this._Venda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Venda.Entity = null;
						previousValue.Compradors.Remove(this);
					}
					this._Venda.Entity = value;
					if ((value != null))
					{
						value.Compradors.Add(this);
						this._Venda_ID = value.Venda_ID;
					}
					else
					{
						this._Venda_ID = default(int);
					}
					this.SendPropertyChanged("Venda");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pessoa_Comprador", Storage="_Pessoa", ThisKey="Pessoa_ID", OtherKey="Pessoa_ID", IsForeignKey=true)]
		public Pessoa Pessoa
		{
			get
			{
				return this._Pessoa.Entity;
			}
			set
			{
				Pessoa previousValue = this._Pessoa.Entity;
				if (((previousValue != value) 
							|| (this._Pessoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pessoa.Entity = null;
						previousValue.Compradors.Remove(this);
					}
					this._Pessoa.Entity = value;
					if ((value != null))
					{
						value.Compradors.Add(this);
						this._Pessoa_ID = value.Pessoa_ID;
					}
					else
					{
						this._Pessoa_ID = default(int);
					}
					this.SendPropertyChanged("Pessoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Desejos(Desejo entity)
		{
			this.SendPropertyChanging();
			entity.Comprador = this;
		}
		
		private void detach_Desejos(Desejo entity)
		{
			this.SendPropertyChanging();
			entity.Comprador = null;
		}
		
		private void attach_Imovels(Imovel entity)
		{
			this.SendPropertyChanging();
			entity.Comprador = this;
		}
		
		private void detach_Imovels(Imovel entity)
		{
			this.SendPropertyChanging();
			entity.Comprador = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comprar")]
	public partial class Comprar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Comprar_ID;
		
		private int _Imovel_ID;
		
		private EntityRef<Imovel> _Imovel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnComprar_IDChanging(int value);
    partial void OnComprar_IDChanged();
    partial void OnImovel_IDChanging(int value);
    partial void OnImovel_IDChanged();
    #endregion
		
		public Comprar()
		{
			this._Imovel = default(EntityRef<Imovel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comprar_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Comprar_ID
		{
			get
			{
				return this._Comprar_ID;
			}
			set
			{
				if ((this._Comprar_ID != value))
				{
					this.OnComprar_IDChanging(value);
					this.SendPropertyChanging();
					this._Comprar_ID = value;
					this.SendPropertyChanged("Comprar_ID");
					this.OnComprar_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imovel_ID", DbType="Int NOT NULL")]
		public int Imovel_ID
		{
			get
			{
				return this._Imovel_ID;
			}
			set
			{
				if ((this._Imovel_ID != value))
				{
					if (this._Imovel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImovel_IDChanging(value);
					this.SendPropertyChanging();
					this._Imovel_ID = value;
					this.SendPropertyChanged("Imovel_ID");
					this.OnImovel_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Imovel_Comprar", Storage="_Imovel", ThisKey="Imovel_ID", OtherKey="Imovel_ID", IsForeignKey=true)]
		public Imovel Imovel
		{
			get
			{
				return this._Imovel.Entity;
			}
			set
			{
				Imovel previousValue = this._Imovel.Entity;
				if (((previousValue != value) 
							|| (this._Imovel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Imovel.Entity = null;
						previousValue.Comprars.Remove(this);
					}
					this._Imovel.Entity = value;
					if ((value != null))
					{
						value.Comprars.Add(this);
						this._Imovel_ID = value.Imovel_ID;
					}
					else
					{
						this._Imovel_ID = default(int);
					}
					this.SendPropertyChanged("Imovel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Desejos")]
	public partial class Desejo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Desejo_ID;
		
		private string _Localizacao;
		
		private System.Nullable<decimal> _Preco;
		
		private System.Nullable<int> _CodigoPostal;
		
		private int _Comprador_ID;
		
		private EntityRef<Comprador> _Comprador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDesejo_IDChanging(int value);
    partial void OnDesejo_IDChanged();
    partial void OnLocalizacaoChanging(string value);
    partial void OnLocalizacaoChanged();
    partial void OnPrecoChanging(System.Nullable<decimal> value);
    partial void OnPrecoChanged();
    partial void OnCodigoPostalChanging(System.Nullable<int> value);
    partial void OnCodigoPostalChanged();
    partial void OnComprador_IDChanging(int value);
    partial void OnComprador_IDChanged();
    #endregion
		
		public Desejo()
		{
			this._Comprador = default(EntityRef<Comprador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desejo_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Desejo_ID
		{
			get
			{
				return this._Desejo_ID;
			}
			set
			{
				if ((this._Desejo_ID != value))
				{
					this.OnDesejo_IDChanging(value);
					this.SendPropertyChanging();
					this._Desejo_ID = value;
					this.SendPropertyChanged("Desejo_ID");
					this.OnDesejo_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Localizacao", DbType="VarChar(400)")]
		public string Localizacao
		{
			get
			{
				return this._Localizacao;
			}
			set
			{
				if ((this._Localizacao != value))
				{
					this.OnLocalizacaoChanging(value);
					this.SendPropertyChanging();
					this._Localizacao = value;
					this.SendPropertyChanged("Localizacao");
					this.OnLocalizacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Preco", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Preco
		{
			get
			{
				return this._Preco;
			}
			set
			{
				if ((this._Preco != value))
				{
					this.OnPrecoChanging(value);
					this.SendPropertyChanging();
					this._Preco = value;
					this.SendPropertyChanged("Preco");
					this.OnPrecoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodigoPostal", DbType="Int")]
		public System.Nullable<int> CodigoPostal
		{
			get
			{
				return this._CodigoPostal;
			}
			set
			{
				if ((this._CodigoPostal != value))
				{
					this.OnCodigoPostalChanging(value);
					this.SendPropertyChanging();
					this._CodigoPostal = value;
					this.SendPropertyChanged("CodigoPostal");
					this.OnCodigoPostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comprador_ID", DbType="Int NOT NULL")]
		public int Comprador_ID
		{
			get
			{
				return this._Comprador_ID;
			}
			set
			{
				if ((this._Comprador_ID != value))
				{
					if (this._Comprador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnComprador_IDChanging(value);
					this.SendPropertyChanging();
					this._Comprador_ID = value;
					this.SendPropertyChanged("Comprador_ID");
					this.OnComprador_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comprador_Desejo", Storage="_Comprador", ThisKey="Comprador_ID", OtherKey="Comprador_ID", IsForeignKey=true)]
		public Comprador Comprador
		{
			get
			{
				return this._Comprador.Entity;
			}
			set
			{
				Comprador previousValue = this._Comprador.Entity;
				if (((previousValue != value) 
							|| (this._Comprador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Comprador.Entity = null;
						previousValue.Desejos.Remove(this);
					}
					this._Comprador.Entity = value;
					if ((value != null))
					{
						value.Desejos.Add(this);
						this._Comprador_ID = value.Comprador_ID;
					}
					else
					{
						this._Comprador_ID = default(int);
					}
					this.SendPropertyChanged("Comprador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Imovel")]
	public partial class Imovel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Imovel_ID;
		
		private string _Localizacao;
		
		private string _Concelho;
		
		private string _Freguesia;
		
		private System.Nullable<int> _CodigoPostal;
		
		private string _Tipo;
		
		private string _Caracteristicas;
		
		private System.Nullable<System.DateTime> _DataConstrucao;
		
		private string _CE;
		
		private System.Nullable<int> _Vendedor_ID;
		
		private System.Nullable<int> _Comprador_ID;
		
		private System.Nullable<int> _Arrendatario_ID;
		
		private System.Nullable<int> _Preco_ID;
		
		private EntitySet<Arrendar> _Arrendars;
		
		private EntitySet<Arrendatario> _Arrendatarios;
		
		private EntitySet<Comprador> _Compradors;
		
		private EntitySet<Comprar> _Comprars;
		
		private EntitySet<Permuta> _Permutas;
		
		private EntitySet<Preco> _Precos;
		
		private EntitySet<Vendedor> _Vendedors;
		
		private EntitySet<Vender> _Venders;
		
		private EntityRef<Arrendatario> _Arrendatario;
		
		private EntityRef<Comprador> _Comprador;
		
		private EntityRef<Preco> _Preco;
		
		private EntityRef<Vendedor> _Vendedor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImovel_IDChanging(int value);
    partial void OnImovel_IDChanged();
    partial void OnLocalizacaoChanging(string value);
    partial void OnLocalizacaoChanged();
    partial void OnConcelhoChanging(string value);
    partial void OnConcelhoChanged();
    partial void OnFreguesiaChanging(string value);
    partial void OnFreguesiaChanged();
    partial void OnCodigoPostalChanging(System.Nullable<int> value);
    partial void OnCodigoPostalChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    partial void OnCaracteristicasChanging(string value);
    partial void OnCaracteristicasChanged();
    partial void OnDataConstrucaoChanging(System.Nullable<System.DateTime> value);
    partial void OnDataConstrucaoChanged();
    partial void OnCEChanging(string value);
    partial void OnCEChanged();
    partial void OnVendedor_IDChanging(System.Nullable<int> value);
    partial void OnVendedor_IDChanged();
    partial void OnComprador_IDChanging(System.Nullable<int> value);
    partial void OnComprador_IDChanged();
    partial void OnArrendatario_IDChanging(System.Nullable<int> value);
    partial void OnArrendatario_IDChanged();
    partial void OnPreco_IDChanging(System.Nullable<int> value);
    partial void OnPreco_IDChanged();
    #endregion
		
		public Imovel()
		{
			this._Arrendars = new EntitySet<Arrendar>(new Action<Arrendar>(this.attach_Arrendars), new Action<Arrendar>(this.detach_Arrendars));
			this._Arrendatarios = new EntitySet<Arrendatario>(new Action<Arrendatario>(this.attach_Arrendatarios), new Action<Arrendatario>(this.detach_Arrendatarios));
			this._Compradors = new EntitySet<Comprador>(new Action<Comprador>(this.attach_Compradors), new Action<Comprador>(this.detach_Compradors));
			this._Comprars = new EntitySet<Comprar>(new Action<Comprar>(this.attach_Comprars), new Action<Comprar>(this.detach_Comprars));
			this._Permutas = new EntitySet<Permuta>(new Action<Permuta>(this.attach_Permutas), new Action<Permuta>(this.detach_Permutas));
			this._Precos = new EntitySet<Preco>(new Action<Preco>(this.attach_Precos), new Action<Preco>(this.detach_Precos));
			this._Vendedors = new EntitySet<Vendedor>(new Action<Vendedor>(this.attach_Vendedors), new Action<Vendedor>(this.detach_Vendedors));
			this._Venders = new EntitySet<Vender>(new Action<Vender>(this.attach_Venders), new Action<Vender>(this.detach_Venders));
			this._Arrendatario = default(EntityRef<Arrendatario>);
			this._Comprador = default(EntityRef<Comprador>);
			this._Preco = default(EntityRef<Preco>);
			this._Vendedor = default(EntityRef<Vendedor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imovel_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Imovel_ID
		{
			get
			{
				return this._Imovel_ID;
			}
			set
			{
				if ((this._Imovel_ID != value))
				{
					this.OnImovel_IDChanging(value);
					this.SendPropertyChanging();
					this._Imovel_ID = value;
					this.SendPropertyChanged("Imovel_ID");
					this.OnImovel_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Localizacao", DbType="VarChar(400)")]
		public string Localizacao
		{
			get
			{
				return this._Localizacao;
			}
			set
			{
				if ((this._Localizacao != value))
				{
					this.OnLocalizacaoChanging(value);
					this.SendPropertyChanging();
					this._Localizacao = value;
					this.SendPropertyChanged("Localizacao");
					this.OnLocalizacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Concelho", DbType="VarChar(100)")]
		public string Concelho
		{
			get
			{
				return this._Concelho;
			}
			set
			{
				if ((this._Concelho != value))
				{
					this.OnConcelhoChanging(value);
					this.SendPropertyChanging();
					this._Concelho = value;
					this.SendPropertyChanged("Concelho");
					this.OnConcelhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Freguesia", DbType="VarChar(100)")]
		public string Freguesia
		{
			get
			{
				return this._Freguesia;
			}
			set
			{
				if ((this._Freguesia != value))
				{
					this.OnFreguesiaChanging(value);
					this.SendPropertyChanging();
					this._Freguesia = value;
					this.SendPropertyChanged("Freguesia");
					this.OnFreguesiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodigoPostal", DbType="Int")]
		public System.Nullable<int> CodigoPostal
		{
			get
			{
				return this._CodigoPostal;
			}
			set
			{
				if ((this._CodigoPostal != value))
				{
					this.OnCodigoPostalChanging(value);
					this.SendPropertyChanging();
					this._CodigoPostal = value;
					this.SendPropertyChanged("CodigoPostal");
					this.OnCodigoPostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="VarChar(100)")]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caracteristicas", DbType="VarChar(500)")]
		public string Caracteristicas
		{
			get
			{
				return this._Caracteristicas;
			}
			set
			{
				if ((this._Caracteristicas != value))
				{
					this.OnCaracteristicasChanging(value);
					this.SendPropertyChanging();
					this._Caracteristicas = value;
					this.SendPropertyChanged("Caracteristicas");
					this.OnCaracteristicasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataConstrucao", DbType="Date")]
		public System.Nullable<System.DateTime> DataConstrucao
		{
			get
			{
				return this._DataConstrucao;
			}
			set
			{
				if ((this._DataConstrucao != value))
				{
					this.OnDataConstrucaoChanging(value);
					this.SendPropertyChanging();
					this._DataConstrucao = value;
					this.SendPropertyChanged("DataConstrucao");
					this.OnDataConstrucaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CE", DbType="VarChar(40)")]
		public string CE
		{
			get
			{
				return this._CE;
			}
			set
			{
				if ((this._CE != value))
				{
					this.OnCEChanging(value);
					this.SendPropertyChanging();
					this._CE = value;
					this.SendPropertyChanged("CE");
					this.OnCEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vendedor_ID", DbType="Int")]
		public System.Nullable<int> Vendedor_ID
		{
			get
			{
				return this._Vendedor_ID;
			}
			set
			{
				if ((this._Vendedor_ID != value))
				{
					if (this._Vendedor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVendedor_IDChanging(value);
					this.SendPropertyChanging();
					this._Vendedor_ID = value;
					this.SendPropertyChanged("Vendedor_ID");
					this.OnVendedor_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comprador_ID", DbType="Int")]
		public System.Nullable<int> Comprador_ID
		{
			get
			{
				return this._Comprador_ID;
			}
			set
			{
				if ((this._Comprador_ID != value))
				{
					if (this._Comprador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnComprador_IDChanging(value);
					this.SendPropertyChanging();
					this._Comprador_ID = value;
					this.SendPropertyChanged("Comprador_ID");
					this.OnComprador_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arrendatario_ID", DbType="Int")]
		public System.Nullable<int> Arrendatario_ID
		{
			get
			{
				return this._Arrendatario_ID;
			}
			set
			{
				if ((this._Arrendatario_ID != value))
				{
					if (this._Arrendatario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArrendatario_IDChanging(value);
					this.SendPropertyChanging();
					this._Arrendatario_ID = value;
					this.SendPropertyChanged("Arrendatario_ID");
					this.OnArrendatario_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Preco_ID", DbType="Int")]
		public System.Nullable<int> Preco_ID
		{
			get
			{
				return this._Preco_ID;
			}
			set
			{
				if ((this._Preco_ID != value))
				{
					if (this._Preco.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreco_IDChanging(value);
					this.SendPropertyChanging();
					this._Preco_ID = value;
					this.SendPropertyChanged("Preco_ID");
					this.OnPreco_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Imovel_Arrendar", Storage="_Arrendars", ThisKey="Imovel_ID", OtherKey="Imovel_ID")]
		public EntitySet<Arrendar> Arrendars
		{
			get
			{
				return this._Arrendars;
			}
			set
			{
				this._Arrendars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Imovel_Arrendatario", Storage="_Arrendatarios", ThisKey="Imovel_ID", OtherKey="Imovel_ID")]
		public EntitySet<Arrendatario> Arrendatarios
		{
			get
			{
				return this._Arrendatarios;
			}
			set
			{
				this._Arrendatarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Imovel_Comprador", Storage="_Compradors", ThisKey="Imovel_ID", OtherKey="Imovel_ID")]
		public EntitySet<Comprador> Compradors
		{
			get
			{
				return this._Compradors;
			}
			set
			{
				this._Compradors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Imovel_Comprar", Storage="_Comprars", ThisKey="Imovel_ID", OtherKey="Imovel_ID")]
		public EntitySet<Comprar> Comprars
		{
			get
			{
				return this._Comprars;
			}
			set
			{
				this._Comprars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Imovel_Permuta", Storage="_Permutas", ThisKey="Imovel_ID", OtherKey="Imovel_ID")]
		public EntitySet<Permuta> Permutas
		{
			get
			{
				return this._Permutas;
			}
			set
			{
				this._Permutas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Imovel_Preco", Storage="_Precos", ThisKey="Imovel_ID", OtherKey="Imovel_ID")]
		public EntitySet<Preco> Precos
		{
			get
			{
				return this._Precos;
			}
			set
			{
				this._Precos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Imovel_Vendedor", Storage="_Vendedors", ThisKey="Imovel_ID", OtherKey="Imovel_ID")]
		public EntitySet<Vendedor> Vendedors
		{
			get
			{
				return this._Vendedors;
			}
			set
			{
				this._Vendedors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Imovel_Vender", Storage="_Venders", ThisKey="Imovel_ID", OtherKey="Imovel_ID")]
		public EntitySet<Vender> Venders
		{
			get
			{
				return this._Venders;
			}
			set
			{
				this._Venders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Arrendatario_Imovel", Storage="_Arrendatario", ThisKey="Arrendatario_ID", OtherKey="Arrendatario_ID", IsForeignKey=true)]
		public Arrendatario Arrendatario
		{
			get
			{
				return this._Arrendatario.Entity;
			}
			set
			{
				Arrendatario previousValue = this._Arrendatario.Entity;
				if (((previousValue != value) 
							|| (this._Arrendatario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Arrendatario.Entity = null;
						previousValue.Imovels.Remove(this);
					}
					this._Arrendatario.Entity = value;
					if ((value != null))
					{
						value.Imovels.Add(this);
						this._Arrendatario_ID = value.Arrendatario_ID;
					}
					else
					{
						this._Arrendatario_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Arrendatario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comprador_Imovel", Storage="_Comprador", ThisKey="Comprador_ID", OtherKey="Comprador_ID", IsForeignKey=true)]
		public Comprador Comprador
		{
			get
			{
				return this._Comprador.Entity;
			}
			set
			{
				Comprador previousValue = this._Comprador.Entity;
				if (((previousValue != value) 
							|| (this._Comprador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Comprador.Entity = null;
						previousValue.Imovels.Remove(this);
					}
					this._Comprador.Entity = value;
					if ((value != null))
					{
						value.Imovels.Add(this);
						this._Comprador_ID = value.Comprador_ID;
					}
					else
					{
						this._Comprador_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Comprador");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Preco_Imovel", Storage="_Preco", ThisKey="Preco_ID", OtherKey="Preco_ID", IsForeignKey=true)]
		public Preco Preco
		{
			get
			{
				return this._Preco.Entity;
			}
			set
			{
				Preco previousValue = this._Preco.Entity;
				if (((previousValue != value) 
							|| (this._Preco.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Preco.Entity = null;
						previousValue.Imovels.Remove(this);
					}
					this._Preco.Entity = value;
					if ((value != null))
					{
						value.Imovels.Add(this);
						this._Preco_ID = value.Preco_ID;
					}
					else
					{
						this._Preco_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Preco");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendedor_Imovel", Storage="_Vendedor", ThisKey="Vendedor_ID", OtherKey="Vendedor_ID", IsForeignKey=true)]
		public Vendedor Vendedor
		{
			get
			{
				return this._Vendedor.Entity;
			}
			set
			{
				Vendedor previousValue = this._Vendedor.Entity;
				if (((previousValue != value) 
							|| (this._Vendedor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vendedor.Entity = null;
						previousValue.Imovels.Remove(this);
					}
					this._Vendedor.Entity = value;
					if ((value != null))
					{
						value.Imovels.Add(this);
						this._Vendedor_ID = value.Vendedor_ID;
					}
					else
					{
						this._Vendedor_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Vendedor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Arrendars(Arrendar entity)
		{
			this.SendPropertyChanging();
			entity.Imovel = this;
		}
		
		private void detach_Arrendars(Arrendar entity)
		{
			this.SendPropertyChanging();
			entity.Imovel = null;
		}
		
		private void attach_Arrendatarios(Arrendatario entity)
		{
			this.SendPropertyChanging();
			entity.Imovel = this;
		}
		
		private void detach_Arrendatarios(Arrendatario entity)
		{
			this.SendPropertyChanging();
			entity.Imovel = null;
		}
		
		private void attach_Compradors(Comprador entity)
		{
			this.SendPropertyChanging();
			entity.Imovel = this;
		}
		
		private void detach_Compradors(Comprador entity)
		{
			this.SendPropertyChanging();
			entity.Imovel = null;
		}
		
		private void attach_Comprars(Comprar entity)
		{
			this.SendPropertyChanging();
			entity.Imovel = this;
		}
		
		private void detach_Comprars(Comprar entity)
		{
			this.SendPropertyChanging();
			entity.Imovel = null;
		}
		
		private void attach_Permutas(Permuta entity)
		{
			this.SendPropertyChanging();
			entity.Imovel = this;
		}
		
		private void detach_Permutas(Permuta entity)
		{
			this.SendPropertyChanging();
			entity.Imovel = null;
		}
		
		private void attach_Precos(Preco entity)
		{
			this.SendPropertyChanging();
			entity.Imovel = this;
		}
		
		private void detach_Precos(Preco entity)
		{
			this.SendPropertyChanging();
			entity.Imovel = null;
		}
		
		private void attach_Vendedors(Vendedor entity)
		{
			this.SendPropertyChanging();
			entity.Imovel = this;
		}
		
		private void detach_Vendedors(Vendedor entity)
		{
			this.SendPropertyChanging();
			entity.Imovel = null;
		}
		
		private void attach_Venders(Vender entity)
		{
			this.SendPropertyChanging();
			entity.Imovel = this;
		}
		
		private void detach_Venders(Vender entity)
		{
			this.SendPropertyChanging();
			entity.Imovel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Permuta")]
	public partial class Permuta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Permutar_ID;
		
		private int _Imovel_ID;
		
		private EntityRef<Imovel> _Imovel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPermutar_IDChanging(int value);
    partial void OnPermutar_IDChanged();
    partial void OnImovel_IDChanging(int value);
    partial void OnImovel_IDChanged();
    #endregion
		
		public Permuta()
		{
			this._Imovel = default(EntityRef<Imovel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Permutar_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Permutar_ID
		{
			get
			{
				return this._Permutar_ID;
			}
			set
			{
				if ((this._Permutar_ID != value))
				{
					this.OnPermutar_IDChanging(value);
					this.SendPropertyChanging();
					this._Permutar_ID = value;
					this.SendPropertyChanged("Permutar_ID");
					this.OnPermutar_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imovel_ID", DbType="Int NOT NULL")]
		public int Imovel_ID
		{
			get
			{
				return this._Imovel_ID;
			}
			set
			{
				if ((this._Imovel_ID != value))
				{
					if (this._Imovel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImovel_IDChanging(value);
					this.SendPropertyChanging();
					this._Imovel_ID = value;
					this.SendPropertyChanged("Imovel_ID");
					this.OnImovel_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Imovel_Permuta", Storage="_Imovel", ThisKey="Imovel_ID", OtherKey="Imovel_ID", IsForeignKey=true)]
		public Imovel Imovel
		{
			get
			{
				return this._Imovel.Entity;
			}
			set
			{
				Imovel previousValue = this._Imovel.Entity;
				if (((previousValue != value) 
							|| (this._Imovel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Imovel.Entity = null;
						previousValue.Permutas.Remove(this);
					}
					this._Imovel.Entity = value;
					if ((value != null))
					{
						value.Permutas.Add(this);
						this._Imovel_ID = value.Imovel_ID;
					}
					else
					{
						this._Imovel_ID = default(int);
					}
					this.SendPropertyChanged("Imovel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Preco")]
	public partial class Preco : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Preco_ID;
		
		private decimal _Preco1;
		
		private System.Nullable<System.DateTime> _Data;
		
		private int _Imovel_ID;
		
		private EntitySet<Imovel> _Imovels;
		
		private EntityRef<Imovel> _Imovel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPreco_IDChanging(int value);
    partial void OnPreco_IDChanged();
    partial void OnPreco1Changing(decimal value);
    partial void OnPreco1Changed();
    partial void OnDataChanging(System.Nullable<System.DateTime> value);
    partial void OnDataChanged();
    partial void OnImovel_IDChanging(int value);
    partial void OnImovel_IDChanged();
    #endregion
		
		public Preco()
		{
			this._Imovels = new EntitySet<Imovel>(new Action<Imovel>(this.attach_Imovels), new Action<Imovel>(this.detach_Imovels));
			this._Imovel = default(EntityRef<Imovel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Preco_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Preco_ID
		{
			get
			{
				return this._Preco_ID;
			}
			set
			{
				if ((this._Preco_ID != value))
				{
					this.OnPreco_IDChanging(value);
					this.SendPropertyChanging();
					this._Preco_ID = value;
					this.SendPropertyChanged("Preco_ID");
					this.OnPreco_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Preco", Storage="_Preco1", DbType="Decimal(18,0) NOT NULL")]
		public decimal Preco1
		{
			get
			{
				return this._Preco1;
			}
			set
			{
				if ((this._Preco1 != value))
				{
					this.OnPreco1Changing(value);
					this.SendPropertyChanging();
					this._Preco1 = value;
					this.SendPropertyChanged("Preco1");
					this.OnPreco1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="Date")]
		public System.Nullable<System.DateTime> Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imovel_ID", DbType="Int NOT NULL")]
		public int Imovel_ID
		{
			get
			{
				return this._Imovel_ID;
			}
			set
			{
				if ((this._Imovel_ID != value))
				{
					if (this._Imovel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImovel_IDChanging(value);
					this.SendPropertyChanging();
					this._Imovel_ID = value;
					this.SendPropertyChanged("Imovel_ID");
					this.OnImovel_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Preco_Imovel", Storage="_Imovels", ThisKey="Preco_ID", OtherKey="Preco_ID")]
		public EntitySet<Imovel> Imovels
		{
			get
			{
				return this._Imovels;
			}
			set
			{
				this._Imovels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Imovel_Preco", Storage="_Imovel", ThisKey="Imovel_ID", OtherKey="Imovel_ID", IsForeignKey=true)]
		public Imovel Imovel
		{
			get
			{
				return this._Imovel.Entity;
			}
			set
			{
				Imovel previousValue = this._Imovel.Entity;
				if (((previousValue != value) 
							|| (this._Imovel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Imovel.Entity = null;
						previousValue.Precos.Remove(this);
					}
					this._Imovel.Entity = value;
					if ((value != null))
					{
						value.Precos.Add(this);
						this._Imovel_ID = value.Imovel_ID;
					}
					else
					{
						this._Imovel_ID = default(int);
					}
					this.SendPropertyChanged("Imovel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Imovels(Imovel entity)
		{
			this.SendPropertyChanging();
			entity.Preco = this;
		}
		
		private void detach_Imovels(Imovel entity)
		{
			this.SendPropertyChanging();
			entity.Preco = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vendas")]
	public partial class Venda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Venda_ID;
		
		private System.Nullable<System.DateTime> _Data;
		
		private string _Observacoes;
		
		private System.Nullable<decimal> _Preco;
		
		private EntitySet<Comprador> _Compradors;
		
		private EntitySet<Vendedor> _Vendedors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVenda_IDChanging(int value);
    partial void OnVenda_IDChanged();
    partial void OnDataChanging(System.Nullable<System.DateTime> value);
    partial void OnDataChanged();
    partial void OnObservacoesChanging(string value);
    partial void OnObservacoesChanged();
    partial void OnPrecoChanging(System.Nullable<decimal> value);
    partial void OnPrecoChanged();
    #endregion
		
		public Venda()
		{
			this._Compradors = new EntitySet<Comprador>(new Action<Comprador>(this.attach_Compradors), new Action<Comprador>(this.detach_Compradors));
			this._Vendedors = new EntitySet<Vendedor>(new Action<Vendedor>(this.attach_Vendedors), new Action<Vendedor>(this.detach_Vendedors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Venda_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Venda_ID
		{
			get
			{
				return this._Venda_ID;
			}
			set
			{
				if ((this._Venda_ID != value))
				{
					this.OnVenda_IDChanging(value);
					this.SendPropertyChanging();
					this._Venda_ID = value;
					this.SendPropertyChanged("Venda_ID");
					this.OnVenda_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="Date")]
		public System.Nullable<System.DateTime> Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Observacoes", DbType="VarChar(500)")]
		public string Observacoes
		{
			get
			{
				return this._Observacoes;
			}
			set
			{
				if ((this._Observacoes != value))
				{
					this.OnObservacoesChanging(value);
					this.SendPropertyChanging();
					this._Observacoes = value;
					this.SendPropertyChanged("Observacoes");
					this.OnObservacoesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Preco", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Preco
		{
			get
			{
				return this._Preco;
			}
			set
			{
				if ((this._Preco != value))
				{
					this.OnPrecoChanging(value);
					this.SendPropertyChanging();
					this._Preco = value;
					this.SendPropertyChanged("Preco");
					this.OnPrecoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venda_Comprador", Storage="_Compradors", ThisKey="Venda_ID", OtherKey="Venda_ID")]
		public EntitySet<Comprador> Compradors
		{
			get
			{
				return this._Compradors;
			}
			set
			{
				this._Compradors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venda_Vendedor", Storage="_Vendedors", ThisKey="Venda_ID", OtherKey="Venda_ID")]
		public EntitySet<Vendedor> Vendedors
		{
			get
			{
				return this._Vendedors;
			}
			set
			{
				this._Vendedors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Compradors(Comprador entity)
		{
			this.SendPropertyChanging();
			entity.Venda = this;
		}
		
		private void detach_Compradors(Comprador entity)
		{
			this.SendPropertyChanging();
			entity.Venda = null;
		}
		
		private void attach_Vendedors(Vendedor entity)
		{
			this.SendPropertyChanging();
			entity.Venda = this;
		}
		
		private void detach_Vendedors(Vendedor entity)
		{
			this.SendPropertyChanging();
			entity.Venda = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vendedor")]
	public partial class Vendedor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Vendedor_ID;
		
		private int _Pessoa_ID;
		
		private System.Nullable<int> _Imovel_ID;
		
		private int _Venda_ID;
		
		private EntitySet<Imovel> _Imovels;
		
		private EntityRef<Imovel> _Imovel;
		
		private EntityRef<Venda> _Venda;
		
		private EntityRef<Pessoa> _Pessoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVendedor_IDChanging(int value);
    partial void OnVendedor_IDChanged();
    partial void OnPessoa_IDChanging(int value);
    partial void OnPessoa_IDChanged();
    partial void OnImovel_IDChanging(System.Nullable<int> value);
    partial void OnImovel_IDChanged();
    partial void OnVenda_IDChanging(int value);
    partial void OnVenda_IDChanged();
    #endregion
		
		public Vendedor()
		{
			this._Imovels = new EntitySet<Imovel>(new Action<Imovel>(this.attach_Imovels), new Action<Imovel>(this.detach_Imovels));
			this._Imovel = default(EntityRef<Imovel>);
			this._Venda = default(EntityRef<Venda>);
			this._Pessoa = default(EntityRef<Pessoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vendedor_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Vendedor_ID
		{
			get
			{
				return this._Vendedor_ID;
			}
			set
			{
				if ((this._Vendedor_ID != value))
				{
					this.OnVendedor_IDChanging(value);
					this.SendPropertyChanging();
					this._Vendedor_ID = value;
					this.SendPropertyChanged("Vendedor_ID");
					this.OnVendedor_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pessoa_ID", DbType="Int NOT NULL")]
		public int Pessoa_ID
		{
			get
			{
				return this._Pessoa_ID;
			}
			set
			{
				if ((this._Pessoa_ID != value))
				{
					if (this._Pessoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPessoa_IDChanging(value);
					this.SendPropertyChanging();
					this._Pessoa_ID = value;
					this.SendPropertyChanged("Pessoa_ID");
					this.OnPessoa_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imovel_ID", DbType="Int")]
		public System.Nullable<int> Imovel_ID
		{
			get
			{
				return this._Imovel_ID;
			}
			set
			{
				if ((this._Imovel_ID != value))
				{
					if (this._Imovel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImovel_IDChanging(value);
					this.SendPropertyChanging();
					this._Imovel_ID = value;
					this.SendPropertyChanged("Imovel_ID");
					this.OnImovel_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Venda_ID", DbType="Int NOT NULL")]
		public int Venda_ID
		{
			get
			{
				return this._Venda_ID;
			}
			set
			{
				if ((this._Venda_ID != value))
				{
					if (this._Venda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVenda_IDChanging(value);
					this.SendPropertyChanging();
					this._Venda_ID = value;
					this.SendPropertyChanged("Venda_ID");
					this.OnVenda_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendedor_Imovel", Storage="_Imovels", ThisKey="Vendedor_ID", OtherKey="Vendedor_ID")]
		public EntitySet<Imovel> Imovels
		{
			get
			{
				return this._Imovels;
			}
			set
			{
				this._Imovels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Imovel_Vendedor", Storage="_Imovel", ThisKey="Imovel_ID", OtherKey="Imovel_ID", IsForeignKey=true)]
		public Imovel Imovel
		{
			get
			{
				return this._Imovel.Entity;
			}
			set
			{
				Imovel previousValue = this._Imovel.Entity;
				if (((previousValue != value) 
							|| (this._Imovel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Imovel.Entity = null;
						previousValue.Vendedors.Remove(this);
					}
					this._Imovel.Entity = value;
					if ((value != null))
					{
						value.Vendedors.Add(this);
						this._Imovel_ID = value.Imovel_ID;
					}
					else
					{
						this._Imovel_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Imovel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venda_Vendedor", Storage="_Venda", ThisKey="Venda_ID", OtherKey="Venda_ID", IsForeignKey=true)]
		public Venda Venda
		{
			get
			{
				return this._Venda.Entity;
			}
			set
			{
				Venda previousValue = this._Venda.Entity;
				if (((previousValue != value) 
							|| (this._Venda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Venda.Entity = null;
						previousValue.Vendedors.Remove(this);
					}
					this._Venda.Entity = value;
					if ((value != null))
					{
						value.Vendedors.Add(this);
						this._Venda_ID = value.Venda_ID;
					}
					else
					{
						this._Venda_ID = default(int);
					}
					this.SendPropertyChanged("Venda");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pessoa_Vendedor", Storage="_Pessoa", ThisKey="Pessoa_ID", OtherKey="Pessoa_ID", IsForeignKey=true)]
		public Pessoa Pessoa
		{
			get
			{
				return this._Pessoa.Entity;
			}
			set
			{
				Pessoa previousValue = this._Pessoa.Entity;
				if (((previousValue != value) 
							|| (this._Pessoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pessoa.Entity = null;
						previousValue.Vendedors.Remove(this);
					}
					this._Pessoa.Entity = value;
					if ((value != null))
					{
						value.Vendedors.Add(this);
						this._Pessoa_ID = value.Pessoa_ID;
					}
					else
					{
						this._Pessoa_ID = default(int);
					}
					this.SendPropertyChanged("Pessoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Imovels(Imovel entity)
		{
			this.SendPropertyChanging();
			entity.Vendedor = this;
		}
		
		private void detach_Imovels(Imovel entity)
		{
			this.SendPropertyChanging();
			entity.Vendedor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vender")]
	public partial class Vender : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Vender_ID;
		
		private int _Imovel_ID;
		
		private EntityRef<Imovel> _Imovel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVender_IDChanging(int value);
    partial void OnVender_IDChanged();
    partial void OnImovel_IDChanging(int value);
    partial void OnImovel_IDChanged();
    #endregion
		
		public Vender()
		{
			this._Imovel = default(EntityRef<Imovel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vender_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Vender_ID
		{
			get
			{
				return this._Vender_ID;
			}
			set
			{
				if ((this._Vender_ID != value))
				{
					this.OnVender_IDChanging(value);
					this.SendPropertyChanging();
					this._Vender_ID = value;
					this.SendPropertyChanged("Vender_ID");
					this.OnVender_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imovel_ID", DbType="Int NOT NULL")]
		public int Imovel_ID
		{
			get
			{
				return this._Imovel_ID;
			}
			set
			{
				if ((this._Imovel_ID != value))
				{
					if (this._Imovel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImovel_IDChanging(value);
					this.SendPropertyChanging();
					this._Imovel_ID = value;
					this.SendPropertyChanged("Imovel_ID");
					this.OnImovel_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Imovel_Vender", Storage="_Imovel", ThisKey="Imovel_ID", OtherKey="Imovel_ID", IsForeignKey=true)]
		public Imovel Imovel
		{
			get
			{
				return this._Imovel.Entity;
			}
			set
			{
				Imovel previousValue = this._Imovel.Entity;
				if (((previousValue != value) 
							|| (this._Imovel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Imovel.Entity = null;
						previousValue.Venders.Remove(this);
					}
					this._Imovel.Entity = value;
					if ((value != null))
					{
						value.Venders.Add(this);
						this._Imovel_ID = value.Imovel_ID;
					}
					else
					{
						this._Imovel_ID = default(int);
					}
					this.SendPropertyChanged("Imovel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Agencia")]
	public partial class Agencia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Agencias_ID;
		
		private string _Telefone;
		
		private string _Nome;
		
		private string _URL;
		
		private string _url_idealista;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAgencias_IDChanging(int value);
    partial void OnAgencias_IDChanged();
    partial void OnTelefoneChanging(string value);
    partial void OnTelefoneChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void Onurl_idealistaChanging(string value);
    partial void Onurl_idealistaChanged();
    #endregion
		
		public Agencia()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Agencias_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Agencias_ID
		{
			get
			{
				return this._Agencias_ID;
			}
			set
			{
				if ((this._Agencias_ID != value))
				{
					this.OnAgencias_IDChanging(value);
					this.SendPropertyChanging();
					this._Agencias_ID = value;
					this.SendPropertyChanged("Agencias_ID");
					this.OnAgencias_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefone", DbType="VarChar(50)")]
		public string Telefone
		{
			get
			{
				return this._Telefone;
			}
			set
			{
				if ((this._Telefone != value))
				{
					this.OnTelefoneChanging(value);
					this.SendPropertyChanging();
					this._Telefone = value;
					this.SendPropertyChanged("Telefone");
					this.OnTelefoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(200)")]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="VarChar(250)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url_idealista", DbType="VarChar(250)")]
		public string url_idealista
		{
			get
			{
				return this._url_idealista;
			}
			set
			{
				if ((this._url_idealista != value))
				{
					this.Onurl_idealistaChanging(value);
					this.SendPropertyChanging();
					this._url_idealista = value;
					this.SendPropertyChanged("url_idealista");
					this.Onurl_idealistaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pessoa")]
	public partial class Pessoa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nome;
		
		private System.Nullable<int> _BI;
		
		private int _Pessoa_ID;
		
		private System.Nullable<int> _Telefone;
		
		private string _Email;
		
		private string _Profissao;
		
		private System.Nullable<System.DateTime> _DataNascimento;
		
		private string _Morada;
		
		private System.Nullable<int> _NIF;
		
		private EntitySet<Arrendatario> _Arrendatarios;
		
		private EntitySet<Comprador> _Compradors;
		
		private EntitySet<Vendedor> _Vendedors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnBIChanging(System.Nullable<int> value);
    partial void OnBIChanged();
    partial void OnPessoa_IDChanging(int value);
    partial void OnPessoa_IDChanged();
    partial void OnTelefoneChanging(System.Nullable<int> value);
    partial void OnTelefoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnProfissaoChanging(string value);
    partial void OnProfissaoChanged();
    partial void OnDataNascimentoChanging(System.Nullable<System.DateTime> value);
    partial void OnDataNascimentoChanged();
    partial void OnMoradaChanging(string value);
    partial void OnMoradaChanged();
    partial void OnNIFChanging(System.Nullable<int> value);
    partial void OnNIFChanged();
    #endregion
		
		public Pessoa()
		{
			this._Arrendatarios = new EntitySet<Arrendatario>(new Action<Arrendatario>(this.attach_Arrendatarios), new Action<Arrendatario>(this.detach_Arrendatarios));
			this._Compradors = new EntitySet<Comprador>(new Action<Comprador>(this.attach_Compradors), new Action<Comprador>(this.detach_Compradors));
			this._Vendedors = new EntitySet<Vendedor>(new Action<Vendedor>(this.attach_Vendedors), new Action<Vendedor>(this.detach_Vendedors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI", DbType="Int")]
		public System.Nullable<int> BI
		{
			get
			{
				return this._BI;
			}
			set
			{
				if ((this._BI != value))
				{
					this.OnBIChanging(value);
					this.SendPropertyChanging();
					this._BI = value;
					this.SendPropertyChanged("BI");
					this.OnBIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pessoa_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Pessoa_ID
		{
			get
			{
				return this._Pessoa_ID;
			}
			set
			{
				if ((this._Pessoa_ID != value))
				{
					this.OnPessoa_IDChanging(value);
					this.SendPropertyChanging();
					this._Pessoa_ID = value;
					this.SendPropertyChanged("Pessoa_ID");
					this.OnPessoa_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefone", DbType="Int")]
		public System.Nullable<int> Telefone
		{
			get
			{
				return this._Telefone;
			}
			set
			{
				if ((this._Telefone != value))
				{
					this.OnTelefoneChanging(value);
					this.SendPropertyChanging();
					this._Telefone = value;
					this.SendPropertyChanged("Telefone");
					this.OnTelefoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profissao", DbType="VarChar(250)")]
		public string Profissao
		{
			get
			{
				return this._Profissao;
			}
			set
			{
				if ((this._Profissao != value))
				{
					this.OnProfissaoChanging(value);
					this.SendPropertyChanging();
					this._Profissao = value;
					this.SendPropertyChanged("Profissao");
					this.OnProfissaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataNascimento", DbType="Date")]
		public System.Nullable<System.DateTime> DataNascimento
		{
			get
			{
				return this._DataNascimento;
			}
			set
			{
				if ((this._DataNascimento != value))
				{
					this.OnDataNascimentoChanging(value);
					this.SendPropertyChanging();
					this._DataNascimento = value;
					this.SendPropertyChanged("DataNascimento");
					this.OnDataNascimentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Morada", DbType="VarChar(250)")]
		public string Morada
		{
			get
			{
				return this._Morada;
			}
			set
			{
				if ((this._Morada != value))
				{
					this.OnMoradaChanging(value);
					this.SendPropertyChanging();
					this._Morada = value;
					this.SendPropertyChanged("Morada");
					this.OnMoradaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIF", DbType="Int")]
		public System.Nullable<int> NIF
		{
			get
			{
				return this._NIF;
			}
			set
			{
				if ((this._NIF != value))
				{
					this.OnNIFChanging(value);
					this.SendPropertyChanging();
					this._NIF = value;
					this.SendPropertyChanged("NIF");
					this.OnNIFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pessoa_Arrendatario", Storage="_Arrendatarios", ThisKey="Pessoa_ID", OtherKey="Pessoa_ID")]
		public EntitySet<Arrendatario> Arrendatarios
		{
			get
			{
				return this._Arrendatarios;
			}
			set
			{
				this._Arrendatarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pessoa_Comprador", Storage="_Compradors", ThisKey="Pessoa_ID", OtherKey="Pessoa_ID")]
		public EntitySet<Comprador> Compradors
		{
			get
			{
				return this._Compradors;
			}
			set
			{
				this._Compradors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pessoa_Vendedor", Storage="_Vendedors", ThisKey="Pessoa_ID", OtherKey="Pessoa_ID")]
		public EntitySet<Vendedor> Vendedors
		{
			get
			{
				return this._Vendedors;
			}
			set
			{
				this._Vendedors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Arrendatarios(Arrendatario entity)
		{
			this.SendPropertyChanging();
			entity.Pessoa = this;
		}
		
		private void detach_Arrendatarios(Arrendatario entity)
		{
			this.SendPropertyChanging();
			entity.Pessoa = null;
		}
		
		private void attach_Compradors(Comprador entity)
		{
			this.SendPropertyChanging();
			entity.Pessoa = this;
		}
		
		private void detach_Compradors(Comprador entity)
		{
			this.SendPropertyChanging();
			entity.Pessoa = null;
		}
		
		private void attach_Vendedors(Vendedor entity)
		{
			this.SendPropertyChanging();
			entity.Pessoa = this;
		}
		
		private void detach_Vendedors(Vendedor entity)
		{
			this.SendPropertyChanging();
			entity.Pessoa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ignorar")]
	public partial class Ignorar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ignorar_PK;
		
		private string _Telefone;
		
		private string _Descricao;
		
		private string _Data;
		
		private string _ProximaData;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIgnorar_PKChanging(int value);
    partial void OnIgnorar_PKChanged();
    partial void OnTelefoneChanging(string value);
    partial void OnTelefoneChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    partial void OnProximaDataChanging(string value);
    partial void OnProximaDataChanged();
    #endregion
		
		public Ignorar()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ignorar_PK", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ignorar_PK
		{
			get
			{
				return this._Ignorar_PK;
			}
			set
			{
				if ((this._Ignorar_PK != value))
				{
					this.OnIgnorar_PKChanging(value);
					this.SendPropertyChanging();
					this._Ignorar_PK = value;
					this.SendPropertyChanged("Ignorar_PK");
					this.OnIgnorar_PKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefone", DbType="VarChar(50)")]
		public string Telefone
		{
			get
			{
				return this._Telefone;
			}
			set
			{
				if ((this._Telefone != value))
				{
					this.OnTelefoneChanging(value);
					this.SendPropertyChanging();
					this._Telefone = value;
					this.SendPropertyChanged("Telefone");
					this.OnTelefoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descricao", DbType="VarChar(350)")]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="VarChar(50)")]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProximaData", DbType="VarChar(50)")]
		public string ProximaData
		{
			get
			{
				return this._ProximaData;
			}
			set
			{
				if ((this._ProximaData != value))
				{
					this.OnProximaDataChanging(value);
					this.SendPropertyChanging();
					this._ProximaData = value;
					this.SendPropertyChanged("ProximaData");
					this.OnProximaDataChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Potencial")]
	public partial class Potencial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Candidato_ID;
		
		private string _Telefone;
		
		private string _Nome;
		
		private string _TituloAnuncio;
		
		private string _URL;
		
		private System.Nullable<decimal> _Preco;
		
		private System.Nullable<int> _Activo;
		
		private string _Coordenadas;
		
		private string _Angariador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCandidato_IDChanging(int value);
    partial void OnCandidato_IDChanged();
    partial void OnTelefoneChanging(string value);
    partial void OnTelefoneChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnTituloAnuncioChanging(string value);
    partial void OnTituloAnuncioChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnPrecoChanging(System.Nullable<decimal> value);
    partial void OnPrecoChanged();
    partial void OnActivoChanging(System.Nullable<int> value);
    partial void OnActivoChanged();
    partial void OnCoordenadasChanging(string value);
    partial void OnCoordenadasChanged();
    partial void OnAngariadorChanging(string value);
    partial void OnAngariadorChanged();
    #endregion
		
		public Potencial()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Candidato_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Candidato_ID
		{
			get
			{
				return this._Candidato_ID;
			}
			set
			{
				if ((this._Candidato_ID != value))
				{
					this.OnCandidato_IDChanging(value);
					this.SendPropertyChanging();
					this._Candidato_ID = value;
					this.SendPropertyChanged("Candidato_ID");
					this.OnCandidato_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefone", DbType="VarChar(50)")]
		public string Telefone
		{
			get
			{
				return this._Telefone;
			}
			set
			{
				if ((this._Telefone != value))
				{
					this.OnTelefoneChanging(value);
					this.SendPropertyChanging();
					this._Telefone = value;
					this.SendPropertyChanged("Telefone");
					this.OnTelefoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(200)")]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TituloAnuncio", DbType="VarChar(450)")]
		public string TituloAnuncio
		{
			get
			{
				return this._TituloAnuncio;
			}
			set
			{
				if ((this._TituloAnuncio != value))
				{
					this.OnTituloAnuncioChanging(value);
					this.SendPropertyChanging();
					this._TituloAnuncio = value;
					this.SendPropertyChanged("TituloAnuncio");
					this.OnTituloAnuncioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="VarChar(400)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Preco", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Preco
		{
			get
			{
				return this._Preco;
			}
			set
			{
				if ((this._Preco != value))
				{
					this.OnPrecoChanging(value);
					this.SendPropertyChanging();
					this._Preco = value;
					this.SendPropertyChanged("Preco");
					this.OnPrecoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activo", DbType="Int")]
		public System.Nullable<int> Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this.OnActivoChanging(value);
					this.SendPropertyChanging();
					this._Activo = value;
					this.SendPropertyChanged("Activo");
					this.OnActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Coordenadas", DbType="VarChar(350)")]
		public string Coordenadas
		{
			get
			{
				return this._Coordenadas;
			}
			set
			{
				if ((this._Coordenadas != value))
				{
					this.OnCoordenadasChanging(value);
					this.SendPropertyChanging();
					this._Coordenadas = value;
					this.SendPropertyChanged("Coordenadas");
					this.OnCoordenadasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Angariador", DbType="VarChar(150)")]
		public string Angariador
		{
			get
			{
				return this._Angariador;
			}
			set
			{
				if ((this._Angariador != value))
				{
					this.OnAngariadorChanging(value);
					this.SendPropertyChanging();
					this._Angariador = value;
					this.SendPropertyChanged("Angariador");
					this.OnAngariadorChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
